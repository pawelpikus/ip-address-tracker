{"version":3,"sources":["Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","ipData","location","className","ip","city","country","timezone","isp","App","API_KEY","process","useState","query","setQuery","setIpData","center","setCenter","zoom","setZoom","isDomainName","str","RegExp","test","getInitialLocation","a","fetch","response","json","initialLocationData","lat","lng","console","log","useEffect","getLocation","e","preventDefault","locationData","onBoundsChanged","animate","width","anchor","onSubmit","type","name","id","pattern","placeholder","value","onChange","target","icon","faGreaterThan","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30176d20.chunk.js","sourcesContent":["import \"./Card.css\"\r\n\r\nexport default function Card({ipData}){\r\n    \r\n    \r\n    return ipData.location ?( \r\n        \r\n        <div className=\"card\">\r\n            <div className='col'>\r\n                <p className=\"label\">ip address</p>\r\n                <p className=\"data\">{ipData.ip}</p>\r\n            </div>\r\n            <div className='col'>\r\n                <p className=\"label\">location</p>\r\n                <p className=\"data\">{ipData.location.city}, {ipData.location.country}</p>\r\n            </div>\r\n            <div className='col'>\r\n                <p className=\"label\">timezone</p>\r\n                <p className=\"data\">UTC {ipData.location.timezone}</p>\r\n            </div>\r\n            <div className='col'>\r\n                <p className=\"label\">isp</p>\r\n                <p className=\"data\">{ipData.isp}</p>\r\n            </div>\r\n        </div>\r\n        ) : (<div className='card'>\r\n                <p>Please provide data in correct format.</p> \r\n            </div>)\r\n\r\n}","import './App.css';\nimport Card from \"./Card\"\nimport { useState, useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGreaterThan } from '@fortawesome/free-solid-svg-icons'\nimport { Map, Marker } from \"pigeon-maps\"\n\nfunction App() {\n  \n  const ValidIpAddressRegex = \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]).){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\"\n  const ValidDomainNameRegex = \"(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?.)+[a-z0-9][a-z0-9-]{0,61}[a-z0-9]\"\n\n  const API_KEY = process.env.REACT_APP_IPIFY_KEY //paste your API KEY from Apify.com here\n  const [query, setQuery] = useState(\"\")\n  const [ipData, setIpData] = useState()\n  const [center, setCenter] = useState([50, 23])\n  const [zoom, setZoom] = useState(11)\n\n\n  function isDomainName(str){\n    return RegExp(/^\\p{L}/,'u').test(str)\n  }\n\n  const getInitialLocation = async () =>{\n\n    try{\n      const response = await fetch(`https://geo.ipify.org/api/v1?apiKey=${API_KEY}`)\n      const initialLocationData = await response.json()\n      setIpData(initialLocationData)\n      setCenter([initialLocationData.location.lat, initialLocationData.location.lng])\n      \n    } catch(err){\n      console.log(err)\n    }\n  }\n  \n  useEffect(() => {\n    getInitialLocation()\n  }, [])\n  \n  const getLocation = async (e) =>{\n    e.preventDefault()\n    try{\n      const response = await fetch(`https://geo.ipify.org/api/v1?apiKey=${API_KEY}&ipAddress=${!isDomainName(query)?query: ''}&domain=${isDomainName(query)? query: ''}`)\n    const locationData = await response.json()\n    setIpData(locationData)\n    setQuery('')\n    setCenter([locationData.location.lat, locationData.location.lng]) \n    \n    } catch(err){\n      console.log(err)\n    }\n    \n  }\n  \n  return (\n    <>  \n      <div className=\"background-pattern\"></div>\n      <div className=\"map-container\">\n        <Map \n          center={center} \n          zoom={zoom} \n          onBoundsChanged={(center, zoom) => { \n            setCenter(center) \n            setZoom(zoom)}}\n          animate={true}>\n          <Marker width={50} anchor={center} />\n        </Map>\n      </div>\n      \n      <div className=\"container\">\n        <header className=\"header\">\n          <h1 className=\"title\">IP Address Tracker</h1>\n        </header>\n        <main className=\"main\">\n            <form onSubmit={getLocation} className=\"form\">\n              <input \n                type=\"text\" \n                name=\"search-ip\" \n                id=\"search-ip\"\n                pattern = {isDomainName(query)? ValidDomainNameRegex : ValidIpAddressRegex}\n                placeholder=\"Search any IP address or domain name\"\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}/>\n              <button className=\"submit\"><FontAwesomeIcon icon={faGreaterThan}/></button>\n            </form>\n        </main>\n          {ipData ? <Card ipData={ipData}/> : <div>Loading...</div>}\n      </div> \n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}